import {
  Box,
  Container,
  FormControl,
  FormLabel,
  Heading,
  HStack,
  Input,
  InputGroup,
  InputLeftElement,
  Radio,
  RadioGroup,
  Stack,
  Switch,
  Text,
} from '@chakra-ui/react';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import ContentDisplay from '../components/content-display';
import { Users } from '../types/Users';

const Home: NextPage = () => {
  const [users, setUsers] = useState<Users>([]);
  const [filteredUser, setFilteredUser] = useState<Users>([]);
  const [tileView, setTileView] = useState(false);

  const filterUser = (param: string) => {
    if (param === 'all') return setFilteredUser(users);

    setFilteredUser(users.filter((user) => user.gender === param));
  };

  useEffect(() => {
    void fetch('https://randomuser.me/api/?results=50')
      .then((res) => res.json())
      .then((res) => setUsers(res.results as Users));
  }, []);

  useEffect(() => {
    setFilteredUser(users);
  }, [users]);

  users.length && console.log(users[0].name.last);
  return (
    <Container maxW="container.lg" padding={'8'}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Text fontSize={'3xl'} fontWeight="semibold" color={'#555'}>
          User List
        </Text>
        <Stack
          direction={['column', 'row']}
          justifyContent={'space-between'}
          my="4"
          align="center"
        >
          <Stack direction={['column', 'row']} spacing="16" align={'center'}>
            <InputGroup size="sm" minW="150px">
              {/* eslint-disable-next-line react/no-children-prop */}
              <InputLeftElement pointerEvents="none" children={'🔍'} />
              a
              <Input
                variant="outline"
                placeholder="Search..."
                borderRadius={'30px'}
              />
            </InputGroup>
            <Stack direction={'row'} spacing="4">
              <Text minW="fit-content" fontWeight={'medium'}>
                Filter by:{' '}
              </Text>
              <RadioGroup onChange={(param) => filterUser(param)}>
                <Stack direction="row">
                  <Radio colorScheme={'blackAlpha'} value="all">
                    All
                  </Radio>
                  <Radio colorScheme={'blackAlpha'} value="male">
                    Male
                  </Radio>
                  <Radio colorScheme={'blackAlpha'} value="female">
                    Female
                  </Radio>
                </Stack>
              </RadioGroup>
            </Stack>
          </Stack>
          <Stack direction={'row'} align="center" w="fit-content">
            <FormLabel htmlFor="tile-view" mb="0" minW="fit-content">
              Tile View
            </FormLabel>
            <Switch onChange={() => setTileView((v) => !v)} id="tile-view" />
          </Stack>
        </Stack>
        {/* Show the content */}
        <ContentDisplay users={filteredUser} tileView={tileView} />
        {/* <ContentDisplay users={{email: users., fName: 'fname', lName: 'lname', image: 'image', registered: 'registered', username: 'username'}} tileView={tileView} /> */}
      </main>
    </Container>
  );
};

export default Home;
